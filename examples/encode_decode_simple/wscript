#! /usr/bin/env python
# encoding: utf-8

import os

# Necessary since we override different Contexts 
import waflib.extras.wurftools as wt

APPNAME = 'kodo_encode_decode_simple'
VERSION = '0.1'

wt.add_dependency('sak', 'git://github.com/steinwurf/sak.git')
wt.add_dependency('fifi', 'git://github.com/steinwurf/fifi.git')
wt.add_dependency('kodo', 'git://github.com/steinwurf/kodo.git')
wt.add_dependency('boost', 'git://github.com/steinwurf/external-waf-boost.git')
wt.add_dependency('gtest', 'git://github.com/steinwurf/external-waf-gtest.git')

def load_helper(ctx, name):
    if ctx.is_system_dependency(name):
        ctx.fatal('Load a tool to find %s as system dependency' % name)
    else:
        ctx.load_dependency(name)

def options(opt):
    opt.load('wurftools')

    load_helper(opt, 'sak')
    load_helper(opt, 'fifi')
    load_helper(opt, 'boost')
    load_helper(opt, 'kodo')
    load_helper(opt, 'gtest')

def configure(conf):

    conf.load('wurftools')

    load_helper(conf, 'sak')
    load_helper(conf, 'fifi')
    load_helper(conf, 'boost')
    load_helper(conf, 'kodo')
    load_helper(conf, 'gtest')
 
def build(bld):

    load_helper(bld, 'sak')
    load_helper(bld, 'fifi')
    load_helper(bld, 'boost')
    load_helper(bld, 'kodo')
    load_helper(bld, 'gtest')
    
    bld.program(features = 'cxx',
                source   = 'encode_decode_simple.cpp',
                target   = 'encode_decode_simple',
                use      = ['kodo_includes', 'boost_includes',
                            'fifi_includes', 'sak_includes']) 

